<% if authorized?(:index, :search) %>
  <% if (authorized?(:people, :search) && authorized?(:show, :people) && authorized?(:search, :people)) %>

    <div id="uberSearchContainer">
      <% default_search_box_text = "Search the Pulse" %>

      <div id="uberSearchBoxContainer">
        <% form_tag url_for(:controller => :search), :method => 'get' do %>

          <%  if q.present? && controller.controller_name == "search" && (controller.action_name == "index" || controller.action_name == "people" || controller.action_name == "groups") %>
            <input type="text" id="uberSearchBox" class="search" name="q" value="<%= q %>"/>
          <% else %>
            <input type="text" id="uberSearchBox" class="search" name="q" value="<%= @mobile ? '' : default_search_box_text %>"/>
          <% end %>
					
					<% if @mobile %>
          <button type="submit" value="Search" title="Click to search" />
					<% else %>
          <button type="submit" id="uberSearchButton" value="" title="Click to search">
            <div></div>
          </button>
					<% end %>

        <% end %>
      </div>

      <%= link_to("Advanced Search", url_for(:controller => :people, :action => :directory, :format => :html), :id => "advancedSearchLink") if authorized?(:advanced, :people) && !@mobile %>

      <%= javascript_include_tag "jquery.ajaxQueue.js" %>
      <%= javascript_include_tag "jquery.autocomplete.js" %>
			
<% unless @mobile %>
      <script>
        $("#uberSearchBox").autocomplete("/search/autocomplete", {
          minChars: 2,
          selectFirst: false,
          matchContains: true,
          autoFill: false,
          scroll: false,
          cacheLength: 10,
          matchSubset: false,
          width: 275,
          delay: 400,
          formatItem: function(data, i, n, value) {
            return value;
          },
          formatResult: function(data, value) {
            // find the name, it's inside the div with id autoCompleteName
            indexOfId = value.indexOf('autoCompleteName');
            return value.substring(value.indexOf('>', indexOfId)+1, value.indexOf('<', indexOfId));
          },
          formatMatch: function(data, i, n, value) {
            // not sure if this is ever called... but we don't want to match code, just the name
            // find the name, it's inside the div with id autoCompleteName
            indexOfId = value.indexOf('autoCompleteName');
            return value.substring(value.indexOf('>', indexOfId)+1, value.indexOf('<', indexOfId));
          }
        }).result(function(event, info) {
          location.href = $(".acLinkPath", info[0]).html();
        });


        <% if session[:search].nil? || session[:search][:search_prepared].nil? %>
        var prepare = function() {
          jQuery.ajax({
            dataType:'script',
            type:'get',
            url: '/search/prepare'});
          $('#uberSearchBox').unbind('mouseover', prepare);
          $('#uberSearchBox').unbind('focus', prepare);
        };

        $('#uberSearchBox').bind('mouseover', prepare);
        $('#uberSearchBox').bind('focus', prepare);
        <% end %>


        $(document).ready(function() {
          var fields = jQuery("#uberSearchBox");
          for (var i = 0; i < fields.length; i++) {
            fields[i].onfocus = function() {
              this.className += ' focused'; // so we can style focused input elements in IE
              if(this.value=='<%= default_search_box_text %>') this.value='';
            }
            fields[i].onblur = function() {
              this.className = this.className.replace('focused', '');
              if(this.value=='') this.value='<%= default_search_box_text %>';
            }
          };
          
        });

      </script>
<% end %>
    </div>

  <% end %>
<% end %>
